{"version":3,"sources":["components/ShoppingCart.jsx","services/api.js","components/SearchBar.jsx","components/ProductDetails.jsx","components/CheckoutForm.jsx","App.js","serviceWorker.js","index.js"],"names":["ShoppingCart","props","addToCart","location","state","product","productState","add","bind","subtract","handleLocalStorage","this","translated","cart","localStorage","getItem","cartTranslated","JSON","parse","setState","event","precisaSerString","target","name","getOneProduct","find","e","id","push","jsonAddToCart","stringify","removeItem","setItem","locateElement","indexOf","splice","console","log","array","elementToFilter","filter","length","getById","map","noRepetElementsAddToCart","Set","reduce","accumulate","inArray","sort","clear","to","pathname","className","products","products2","data-testid","key","title","src","thumbnail","alt","width","price","shipping","free_shipping","type","onClick","countRepeatedElements","React","Component","url","a","fetch","then","response","json","catch","error","data","getProductsFromCategoryAndQuery","categoryId","query","SearchBar","categories","inputValue","listProducts","selectCategory","listOfCategories","getQuery","handleChange","handleCategory","handleClick","bob","getCategories","result","productId","filterProduct","objectProduct","sumAll","valueInput","value","getCategory","filteredCategory","results","category","onChange","htmlFor","ProductDetails","storaRating","translatedRating","rating","handleRating","stateAddToCart","cols","rows","CheckoutForm","sumPrices","toFixed","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4WAqMeA,E,kDAhMb,WAAYC,GAAQ,IAAD,0BAGuBC,GAFxC,cAAMD,IAE2DA,MAAzDE,SAAYC,MAASC,QAAWH,UAHvB,OAKjB,EAAKE,MAAQ,CACXE,aAAc,GACdJ,aAGF,EAAKK,IAAM,EAAKA,IAAIC,KAAT,gBACX,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAZT,E,gEAgBjBG,KAAKD,uB,2CAIL,IAEIE,EAFEC,EAAOC,aAAaC,QAAQ,QAC5BC,EAAiBC,KAAKC,MAAML,GAE9BG,IAEFJ,EAFkB,YACSI,GADT,SAGlBL,KAAKQ,SAAS,CACZb,aAAcM,EACdV,UAAWU,O,0BAKbQ,GAAQ,IACFd,EAAiBK,KAAKP,MAAtBE,aACFe,EAAgB,UAAMD,EAAME,OAAOC,MACnCC,EAAgBlB,EAAamB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAON,KACxDf,EAAasB,KAAKJ,GAElB,IAAMK,EAAgBZ,KAAKa,UAAUxB,GACrCQ,aAAaiB,WAAW,QACxBjB,aAAakB,QAAQ,OAAQH,GAC7B,IAAMhB,EAAOC,aAAaC,QAAQ,QAC5BC,EAAiBC,KAAKC,MAAML,GAElCF,KAAKQ,SAAS,CACZb,aAAcU,EACdd,UAAWc,M,+BAINI,GAAQ,IACPd,EAAiBK,KAAKP,MAAtBE,aACFe,EAAgB,UAAMD,EAAME,OAAOC,MACnCC,EAAgBlB,EAAamB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAON,KAClDY,EAAgB3B,EAAa4B,QAAQV,GAC3ClB,EAAa6B,OAAOF,EAAe,GAEnC,IAAMJ,EAAgBZ,KAAKa,UAAUxB,GACrCQ,aAAaiB,WAAW,QACxBjB,aAAakB,QAAQ,OAAQH,GAC7B,IAAMhB,EAAOC,aAAaC,QAAQ,QAC5BC,EAAiBC,KAAKC,MAAML,GAClCuB,QAAQC,IAAIrB,GAEZL,KAAKQ,SAAS,CACZb,aAAcU,EACdd,UAAWc,M,4CAIOsB,EAAOC,GAE3B,OADsBD,EAAME,QAAO,SAACd,GAAD,OAAOA,EAAEC,KAAOY,EAAgBZ,MAC9Cc,S,+BASb,IAAD,OACCvC,EAAcS,KAAKP,MAAnBF,UAIFwC,EAAUxC,EAAUyC,KAAI,SAACjB,GAAD,OAAOA,EAAEC,MAEjCiB,EADc,YAAO,IAAIC,IAAIH,IACaI,QAAO,SAACC,EAAYpB,GAClE,IAAMqB,EAAU9C,EAAUuB,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOA,KAE/C,OADAoB,EAAWnB,KAAKoB,GACTD,IACN,IAMH,OALAH,EAAyBK,OAEzBb,QAAQc,QACRd,QAAQC,IAAI,yBAA0BnC,GAGpC,6BAEE,gCACE,kBAAC,IAAD,CACEiD,GAAK,CACHC,SAAU,IACVhD,MAAO,CACLC,QAASH,IAGbmD,UAAU,eAPZ,UAWA,kBAAC,IAAD,CACEF,GAAK,CACHC,SAAU,YACVhD,MAAO,CACLkD,SAAU,CAAEV,4BACZW,UAAW,CAAErD,eAGjBsD,cAAY,oBACZH,UAAU,YATZ,YAgBAT,GAA4BA,EAAyBH,OAAS,EAC1DG,EAAyBD,KAAI,SAACtC,GAAD,OAC7B,yBACEmD,cAAY,iCACZC,IAAMpD,EAAQsB,GACd0B,UAAU,qBAEV,uBAAGG,cAAY,6BAA6BH,UAAU,cAClDhD,EAAQqD,OAEZ,yBAAKC,IAAMtD,EAAQuD,UAAYC,IAAI,OAAOC,MAAM,UAChD,wCAAWzD,EAAQ0D,QAEjB1D,EAAQ2D,SAASC,cACf,uBAAGT,cAAY,gBAAgBH,UAAU,OAAzC,uBACA,KAEJ,yBAAKA,UAAU,gCACb,4BACEG,cAAY,4BACZU,KAAK,SACL3C,KAAOlB,EAAQsB,GACfwC,QAAU,EAAK5D,IACf8C,UAAU,oBALZ,KAUA,2BACI,EAAKe,sBAAsBlE,EAAWG,IAG1C,4BACEmD,cAAY,4BACZU,KAAK,SACL3C,KAAOlB,EAAQsB,GACfwC,QAAU,EAAK1D,SACf4C,UAAU,oBALZ,UAaJ,uBAAGG,cAAY,+BAAf,mC,GAhLaa,IAAMC,W,yCCJ3BC,EAAM,yC,4CAEL,4BAAAC,EAAA,sEACcC,MAAM,GAAD,OAAIF,EAAJ,gBACrBG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAW1C,QAAQC,IAAIyC,MAH3B,cACCC,EADD,yBAKEA,GALF,4C,sBAQA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,eAAAV,EAAA,sEACcC,MAAM,GAAD,OAAIF,EAAJ,4BAA2BU,EAA3B,cAA2CC,IAChER,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAW1C,QAAQC,IAAIyC,MAH3B,cACCC,EADD,yBAKEA,GALF,4C,0BC0OQI,E,kDA9Ob,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXgF,WAAY,GACZC,WAAY,GACZC,aAAc,GACdC,eAAgB,GAEhBrF,UAAW,IAGb,EAAKsF,iBAAmB,EAAKA,iBAAiBhF,KAAtB,gBACxB,EAAKiF,SAAW,EAAKA,SAASjF,KAAd,gBAChB,EAAKkF,aAAe,EAAKA,aAAalF,KAAlB,gBACpB,EAAKmF,eAAiB,EAAKA,eAAenF,KAApB,gBACtB,EAAKoF,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKqF,IAAM,EAAKnF,mBAAmBF,KAAxB,gBAhBM,E,gEAoBE,IAAD,QDxBf,WAAP,gCCyBIsF,GACGpB,MAAK,SAACqB,GAAD,OAAY,EAAK5E,SAAS,CAC9BiE,WAAYW,OAGhBpF,KAAKD,uB,kCAIKU,GAAQ,IAAD,EACmBT,KAAKP,MAAjCkF,EADS,EACTA,aAAcpF,EADL,EACKA,UAChB8F,EAAY5E,EAAME,OAAOK,GACzBsE,EAAgBX,EAAa9C,QAAO,SAACuD,GAAD,OAAYA,EAAOpE,KAAOqE,KAC7DE,EAJU,YAIOD,EAJP,MAKjBtF,KAAKQ,SAAS,CACZjB,UAAU,GAAD,mBAAMA,GAAN,CAAiBgG,MAE5B,IAAMC,EAAM,sBAAOjG,GAAP,CAAkBgG,IACxBrE,EAAgBZ,KAAKa,UAAUqE,GACrCrF,aAAakB,QAAQ,OAAQH,K,mCAIlBT,GACX,IAAMgF,EAAahF,EAAME,OAAO+E,MAChC1F,KAAKQ,SAAS,CACZkE,WAAYe,M,qCAKDhF,GAAQ,IAAD,SACeT,KAAKP,MAAhCiF,EADY,EACZA,WAAYD,EADA,EACAA,WACdkB,EAAclF,EAAME,OAAO+E,MAC3BE,EAAmBnB,EACtB5C,QAAO,SAACd,GAAD,OAAOA,EAAEH,OAAS+E,KAAa,GAAG3E,GAC5CqD,EAAgCuB,EAC9BlB,GACCX,MAAK,SAACqB,GACL,EAAK5E,SAAS,CACZmE,aAAcS,EAAOS,aAG3B7F,KAAKQ,SAAS,CACZoE,eAAgBgB,M,2CAMlB,IAEI3F,EAFEC,EAAOC,aAAaC,QAAQ,QAC5BC,EAAiBC,KAAKC,MAAML,GAE9BG,IAEFJ,EAFkB,YACSI,GADT,SAGlBL,KAAKQ,SAAS,CACZjB,UAAWU,O,iCAML,IAAD,SAC8BD,KAAKP,MAApCiF,EADC,EACDA,WACRL,EAFS,EACWO,eAElBF,GACCX,MAAK,SAACqB,GAAD,OAAY,EAAK5E,SAAS,CAC9BmE,aAAcS,EAAOS,e,uCAKVpB,GAAa,IAAD,OAC3B,OAAOA,EAAaA,EAAWzC,KAAI,SAAC8D,GAAD,OACjC,yBAAKhD,IAAMgD,EAAS9E,IAClB,2BACE6B,cAAY,WACZH,UAAU,aACV9B,KAAK,IACL2C,KAAK,QACLmC,MAAQI,EAASlF,KACjBmF,SAAW,EAAKf,iBAElB,8BAAOc,EAASlF,UAEhB,O,+BAGI,IAIJX,EAJG,SACyCD,KAAKP,MAA7CgF,EADD,EACCA,WAAYE,EADb,EACaA,aAAcpF,EAD3B,EAC2BA,UAC5BW,EAAOC,aAAaC,QAAQ,QAC5BC,EAAiBC,KAAKC,MAAML,GAE9BG,EAEFJ,EAFkB,YACSI,GADT,SAIlBJ,EAAa,GAMf,OAHAwB,QAAQc,QACRd,QAAQC,IAAI,sBAAuBnC,GAGjC,iCAEE,gCAEE,2BACEyG,QAAQ,eACRnD,cAAY,wBAFd,2DAKE,2BACEU,KAAK,OACLb,UAAU,eACVG,cAAY,cACZkD,SAAW/F,KAAK+E,eAElB,4BACExB,KAAK,SACLb,UAAU,gBACVG,cAAY,eACZW,QAAUxD,KAAK8E,UAJjB,cAWF,kBAAC,IAAD,CACEtC,GAAK,CACHC,SAAU,iBACVhD,MAAO,CACLC,QAAS,CAAEH,eAGfmD,UAAU,YACVG,cAAY,wBAEZ,yBACEA,cAAY,sBAEZ,kBAAC,IAAD,CAAgBH,UAAU,cACxBzC,EAAW6B,UAMnB,6BAASY,UAAU,aAGjB,yBAAKA,UAAU,mBACX1C,KAAK6E,iBAAiBJ,IAI1B,yBAAK/B,UAAU,iBAEXiC,EAAa7C,OAAS,EAAI6C,EAAa3C,KAAI,SAACtC,GAAD,OACzC,yBACEoD,IAAMpD,EAAQsB,GACd0B,UAAU,eACVG,cAAY,WAEZ,2BAAKnD,EAAQqD,OACb,yBACEC,IAAMtD,EAAQuD,UACdC,IAAI,OACJC,MAAM,QACNT,UAAU,iBAEZ,wCAAWhD,EAAQ0D,QAEjB1D,EAAQ2D,SAASC,cACf,uBAAGT,cAAY,gBAAgBH,UAAU,OAAzC,wBACA,KAGJ,kBAAC,IAAD,CACEF,GAAK,CACHC,SAAS,oBAAD,OAAsB/C,EAAQsB,IACtCvB,MAAO,CACLC,QAAS,CAAEA,WACXH,UAAW,CAAEA,aACboF,aAAc,CAAEA,kBAGpB9B,cAAY,sBACZH,UAAU,gBAVZ,YAgBA,4BACE1B,GAAKtB,EAAQsB,GACbuC,KAAK,SACLV,cAAY,sBACZW,QAAU,EAAKyB,YACfvC,UAAU,kBALZ,6BAWC,mE,GAtOKgB,IAAMC,WC6JfsC,E,kDA5Jb,WAAY3G,GAAQ,IAAD,0BAGTG,GAFR,cAAMH,IACoBA,MAAlBE,SACAC,MACAkF,EAAiBlF,EAAMkF,aAAvBA,aACAjF,EAAYD,EAAMC,QAAlBA,QACAH,EAAcE,EAAMF,UAApBA,UACF2G,EAAc/F,aAAaC,QAAb,UAAwBV,EAAQsB,KAC9CmF,EAAmB7F,KAAKC,MAAM2F,GARnB,OAUjB,EAAKzG,MAAQ,CACXF,UAAU,YAAKA,GACfoF,eACAyB,OAAQD,GAGV,EAAKlB,YAAc,EAAKA,YAAYpF,KAAjB,gBACnB,EAAKwG,aAAe,EAAKA,aAAaxG,KAAlB,gBAjBH,E,wDAoBPY,GAAQ,IAAD,EACmCT,KAAKP,MAAtC6G,EADF,EACT/G,UAA2BoF,EADlB,EACkBA,aAC7BU,EAAY5E,EAAME,OAAOK,GACzBsE,EAAgBX,EAAa9C,QAAO,SAACuD,GAAD,OAAYA,EAAOpE,KAAOqE,KAC7DE,EAJU,YAIOD,EAJP,MAMXE,EAAM,sBAAOc,GAAP,CAAuBf,IAC7BrE,EAAgBZ,KAAKa,UAAUqE,GACrCrF,aAAaiB,WAAW,QACxBjB,aAAakB,QAAQ,OAAQH,GAC7B,IAAMhB,EAAOC,aAAaC,QAAQ,QAC5BC,EAAiBC,KAAKC,MAAML,GAElCF,KAAKQ,SAAS,CACZjB,UAAWc,M,mCAIFI,GAAQ,IAGXf,EAFaM,KAAKV,MAAlBE,SACAC,MACkBC,QAAlBA,QACRS,aAAaiB,WAAb,UAA2B1B,EAAQsB,KACnC,IAAMoF,EAAS9F,KAAKa,UAAUV,EAAME,OAAO+E,OAC3CvF,aAAakB,QAAb,UAAwB3B,EAAQsB,IAAMoF,GAEtCpG,KAAKQ,SAAS,CACZ4F,OAAQ3F,EAAME,OAAO+E,U,+BAIf,IAGAhG,EAFaM,KAAKV,MAAlBE,SACAC,MACkBC,QAAlBA,QAHD,EAIuBM,KAAKP,MAA3BF,EAJD,EAICA,UAAW6G,EAJZ,EAIYA,OASnB,OALA3E,QAAQc,QACRd,QAAQC,IAAInC,GACZkC,QAAQC,IAAR,qBAA0BhC,EAAQsB,IAAMb,aAAa,GAAD,OAAIT,EAAQsB,MAChES,QAAQC,IAAI,WAAYvB,cAGtB,yBAAK0C,cAAY,uBAEf,gCACE,kBAAC,IAAD,CAAML,GAAG,IAAIE,UAAU,eAAvB,YAEA,kBAAC,IAAD,CACEF,GAAK,CACHC,SAAU,iBACVhD,MAAO,CACLC,QAAS,CAAEH,eAGfmD,UAAU,YACVG,cAAY,wBAEZ,yBACEA,cAAY,sBAEZ,kBAAC,IAAD,CAAgBH,UAAU,cACxBnD,EAAUuC,UAKlB,yBAAKY,UAAU,uBACb,2BAAKhD,EAAQqD,OACb,yBACEL,UAAU,gBACVM,IAAMtD,EAAQuD,UACdC,IAAI,OACJC,MAAM,UAER,wCAAWzD,EAAQ0D,QAEjB1D,EAAQ2D,SAASC,cACf,uBAAGT,cAAY,iBAAf,uBAAmD,KAEvD,4BACE7B,GAAKtB,EAAQsB,GACbuC,KAAK,SACLV,cAAY,6BACZW,QAAUxD,KAAKiF,YACfvC,UAAU,kBALZ,yBAUA,2BAAOsD,QAAQ,WAAWtD,UAAU,oBAApC,gCAEE,8BACE9B,KAAK,WACLI,GAAG,WACH6B,cAAY,4BACZ0D,KAAK,KACLC,KAAK,KACLd,MAAQU,EACRL,SAAW/F,KAAKqG,sB,GA1HD3C,IAAMC,WCoGpB8C,E,kDApGb,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IAEDoH,UAAY,EAAKA,UAAU7G,KAAf,gBAHA,E,sDAMTN,GACR,OAAOA,EAAU4C,QAAO,SAACiD,EAAQ1F,GAE/B,OADY0F,EAAS1F,EAAQ0D,QAE5B,K,+BAGK,IAEA3D,EADaO,KAAKV,MAAlBE,SACAC,MACAkD,EAAalD,EAAbkD,SACAC,EAAcnD,EAAdmD,UACAX,EAA6BU,EAA7BV,yBACA1C,EAAcqD,EAAdrD,UAKR,OAHAkC,QAAQc,QACRd,QAAQC,IAAI,qBAAsBnC,GAGhC,6BAEE,gCACE,kBAAC,IAAD,CAAMiD,GAAG,IAAIE,UAAU,eAAvB,WAGF,6BACE,qDAEET,EAAyBD,KAAI,SAACtC,GAAD,OAC3B,yBAAKoD,IAAMpD,EAAQsB,GAAK0B,UAAU,qBAChC,yBAAKM,IAAMtD,EAAQuD,UAAYC,IAAI,OAAOC,MAAM,SAChD,2BAAIzD,EAAQqD,OACZ,wCAAWrD,EAAQ0D,aAM3B,uBAAGV,UAAU,eAAb,aAEU1C,KAAK0G,UAAUnH,GAAWoH,QAAQ,KAI5C,+DAEA,0BAAM3F,GAAG,aACP,2BAAOgF,QAAQ,oBAAoBtD,UAAU,mBAA7C,gBAEE,2BAAOa,KAAK,OAAOV,cAAY,uBAGjC,2BAAOmD,QAAQ,iBAAiBtD,UAAU,mBAA1C,QAEE,2BAAOa,KAAK,QAAQV,cAAY,oBAGlC,2BAAOmD,QAAQ,eAAetD,UAAU,mBAAxC,MAEE,2BAAOa,KAAK,OAAOV,cAAY,kBAGjC,2BAAOmD,QAAQ,iBAAiBtD,UAAU,mBAA1C,WAEE,2BAAOa,KAAK,OAAOV,cAAY,oBAGjC,2BAAOmD,QAAQ,eAAetD,UAAU,mBAAxC,MAEE,2BAAOa,KAAK,OAAOV,cAAY,kBAGjC,2BAAOmD,QAAQ,mBAAmBtD,UAAU,mBAA5C,cAEE,2BAAOa,KAAK,OAAOV,cAAY,sBAGjC,6BACE,4BAAQU,KAAK,SAASb,UAAU,cAAhC,oB,GArFeiB,aCyBZiD,MApBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlE,UAAU,MAAMmE,SAAWC,KAE9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYzC,IAClC,kBAAC,IAAD,CAAOwC,KAAK,iBAAiBC,UAAY5H,IACzC,kBAAC,IAAD,CACE2H,KAAK,uBACLC,UAAYhB,IAEd,kBAAC,IAAD,CAAOe,KAAK,YAAYC,UAAYR,QCT1BS,QACW,cAA7BC,OAAO3H,SAAS4H,UAEkB,UAA7BD,OAAO3H,SAAS4H,UAEhBD,OAAO3H,SAAS4H,SAASC,MAC1B,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9D,MAAK,SAAC+D,GACLA,EAAaC,gBAEd7D,OAAM,SAACC,GACN1C,QAAQ0C,MAAMA,EAAM6D,c","file":"static/js/main.f53b91bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { location: { state: { product: { addToCart } } } } = this.props;\n\n    this.state = {\n      productState: [],\n      addToCart,\n    };\n\n    this.add = this.add.bind(this);\n    this.subtract = this.subtract.bind(this);\n    this.handleLocalStorage = this.handleLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleLocalStorage();\n  }\n\n  handleLocalStorage() {\n    const cart = localStorage.getItem('cart');\n    const cartTranslated = JSON.parse(cart);\n    let translated;\n    if (cartTranslated) {\n      const [...getTranslated] = cartTranslated;\n      translated = getTranslated;\n      this.setState({\n        productState: translated,\n        addToCart: translated,\n      });\n    }\n  }\n\n  add(event) {\n    const { productState } = this.state;\n    const precisaSerString = `${event.target.name}`;\n    const getOneProduct = productState.find((e) => e.id === precisaSerString);\n    productState.push(getOneProduct);\n\n    const jsonAddToCart = JSON.stringify(productState);\n    localStorage.removeItem('cart');\n    localStorage.setItem('cart', jsonAddToCart);\n    const cart = localStorage.getItem('cart');\n    const cartTranslated = JSON.parse(cart);\n\n    this.setState({\n      productState: cartTranslated,\n      addToCart: cartTranslated,\n    });\n  }\n\n  subtract(event) {\n    const { productState } = this.state;\n    const precisaSerString = `${event.target.name}`;\n    const getOneProduct = productState.find((e) => e.id === precisaSerString);\n    const locateElement = productState.indexOf(getOneProduct);\n    productState.splice(locateElement, 1);\n\n    const jsonAddToCart = JSON.stringify(productState);\n    localStorage.removeItem('cart');\n    localStorage.setItem('cart', jsonAddToCart);\n    const cart = localStorage.getItem('cart');\n    const cartTranslated = JSON.parse(cart);\n    console.log(cartTranslated);\n\n    this.setState({\n      productState: cartTranslated,\n      addToCart: cartTranslated,\n    });\n  }\n\n  countRepeatedElements(array, elementToFilter) {\n    const arrayFiltered = array.filter((e) => e.id === elementToFilter.id);\n    return arrayFiltered.length;\n  }\n  // ANTIGA FORMA:\n  // countRepeatedElements(array, elementToFilter) {\n  // return array.reduce((accumulator, checkingElement) => (\n  //   elementToFilter === checkingElement ? accumulator + 1 : accumulator),\n  // 0);\n  // }\n\n  render() {\n    const { addToCart } = this.state;\n\n    // FORMA ANTIGA DE NÃO REPETIR OS PRODUTOS NO CARRINHO.\n    // const noRepetElementsAddToCart = [...new Set(addToCart)];\n    const getById = addToCart.map((e) => e.id); // nova forma.\n    const noRepetGetById = [...new Set(getById)];\n    const noRepetElementsAddToCart = noRepetGetById.reduce((accumulate, id) => {\n      const inArray = addToCart.find((e) => e.id === id);\n      accumulate.push(inArray);\n      return accumulate;\n    }, []);\n    noRepetElementsAddToCart.sort();\n\n    console.clear();\n    console.log('ShoppingCart addToCart', addToCart);\n\n    return (\n      <div>\n\n        <header>\n          <Link\n            to={ {\n              pathname: '/',\n              state: {\n                product: addToCart,\n              },\n            } }\n            className=\"link-voltar\"\n          >\n            voltar\n          </Link>\n          <Link\n            to={ {\n              pathname: '/checkout',\n              state: {\n                products: { noRepetElementsAddToCart },\n                products2: { addToCart },\n              },\n            } }\n            data-testid=\"checkout-products\"\n            className=\"link-buy\"\n          >\n            Comprar\n          </Link>\n        </header>\n\n        {\n          noRepetElementsAddToCart && noRepetElementsAddToCart.length > 0\n            ? noRepetElementsAddToCart.map((product) => (\n              <div\n                data-testid=\"shopping-cart-product-quantity\"\n                key={ product.id }\n                className=\"card-product-cart\"\n              >\n                <p data-testid=\"shopping-cart-product-name\" className=\"cart-title\">\n                  { product.title }\n                </p>\n                <img src={ product.thumbnail } alt=\"foto\" width=\"100px\" />\n                <p>{ `R$ ${product.price}` }</p>\n\n                { product.shipping.free_shipping\n                  ? <p data-testid=\"free-shipping\" className=\"shi\">°Frete Grátis</p>\n                  : null }\n\n                <div className=\"buttons-add-remove-container\">\n                  <button\n                    data-testid=\"product-increase-quantity\"\n                    type=\"button\"\n                    name={ product.id }\n                    onClick={ this.add }\n                    className=\"button-more-less\"\n                  >\n                    +\n                  </button>\n\n                  <p>\n                    { this.countRepeatedElements(addToCart, product) }\n                  </p>\n\n                  <button\n                    data-testid=\"product-decrease-quantity\"\n                    type=\"button\"\n                    name={ product.id }\n                    onClick={ this.subtract }\n                    className=\"button-more-less\"\n                  >\n                    -\n                  </button>\n                </div>\n              </div>\n\n            ))\n            : <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n        }\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  location: PropTypes.objectOf(\n    PropTypes.string,\n    PropTypes.bool,\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.array,\n  ).isRequired,\n};\n\nexport default ShoppingCart;\n","const url = 'https://api.mercadolibre.com/sites/MLB';\n\nexport async function getCategories() {\n  const data = await fetch(`${url}/categories`)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const data = await fetch(`${url}/search?category=${categoryId}&q=${query}`)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n\n  return data;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      inputValue: '',\n      listProducts: {},\n      selectCategory: '',\n      // addToCart: isLocalStorageOn ? isLocalStorageOn : [],\n      addToCart: [],\n    };\n\n    this.listOfCategories = this.listOfCategories.bind(this);\n    this.getQuery = this.getQuery.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCategory = this.handleCategory.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.bob = this.handleLocalStorage.bind(this);\n  }\n\n  // FUNÇAO QUE CHAMA CATEGORIAS DEPOIS DE DOM CARREGADO:\n  componentDidMount() {\n    getCategories()\n      .then((result) => this.setState({\n        categories: result,\n      }));\n\n    this.handleLocalStorage();\n  }\n\n  // FUNÇAO ADICIONA PRODUTO E SALVA NO ARRAY DO ESTADO PARA CARRINHO:\n  handleClick(event) {\n    const { listProducts, addToCart } = this.state;\n    const productId = event.target.id;\n    const filterProduct = listProducts.filter((result) => result.id === productId);\n    const [objectProduct] = filterProduct;\n    this.setState({\n      addToCart: [...addToCart, objectProduct],\n    });\n    const sumAll = [...addToCart, objectProduct];\n    const jsonAddToCart = JSON.stringify(sumAll);\n    localStorage.setItem('cart', jsonAddToCart);\n  }\n\n  // FUNÇAO QUE GUARDA VALOR DE INPUT TEXTO NO ESTADO QUANDO ESCRITO:\n  handleChange(event) {\n    const valueInput = event.target.value;\n    this.setState({\n      inputValue: valueInput,\n    });\n  }\n\n  // FUNÇAO CHAMADA QUANDO SE ESCOLHE CATEGORIA input radio :\n  handleCategory(event) {\n    const { inputValue, categories } = this.state;\n    const getCategory = event.target.value;\n    const filteredCategory = categories\n      .filter((e) => e.name === getCategory)[0].id;\n    getProductsFromCategoryAndQuery(filteredCategory,\n      inputValue)\n      .then((result) => {\n        this.setState({\n          listProducts: result.results,\n        });\n      });\n    this.setState({\n      selectCategory: filteredCategory,\n    });\n  }\n\n  // FUNÇAO ATRIBUI O CART DO LOCALSTORAGE AO THIS.STATE.ADDTOCART:\n  handleLocalStorage() {\n    const cart = localStorage.getItem('cart');\n    const cartTranslated = JSON.parse(cart);\n    let translated;\n    if (cartTranslated) {\n      const [...getTranslated] = cartTranslated;\n      translated = getTranslated;\n      this.setState({\n        addToCart: translated,\n      });\n    }\n  }\n\n  // FUNÇAO CHAMADA PARA API PELO INPUT E CLICA BOTAO PESQUISAR:\n  getQuery() {\n    const { inputValue, selectCategory } = this.state;\n    getProductsFromCategoryAndQuery(selectCategory,\n      inputValue)\n      .then((result) => this.setState({\n        listProducts: result.results,\n      }));\n  }\n\n  // FUNÇÂO QUE CRIA LISTA DE CATEGORIAS:\n  listOfCategories(categories) {\n    return categories ? categories.map((category) => (\n      <div key={ category.id }>\n        <input\n          data-testid=\"category\"\n          className=\"categories\"\n          name=\"1\"\n          type=\"radio\"\n          value={ category.name }\n          onChange={ this.handleCategory }\n        />\n        <span>{category.name}</span>\n      </div>))\n      : null;\n  }\n\n  render() {\n    const { categories, listProducts, addToCart } = this.state;\n    const cart = localStorage.getItem('cart');\n    const cartTranslated = JSON.parse(cart);\n    let translated;\n    if (cartTranslated) {\n      const [...getTranslated] = cartTranslated;\n      translated = getTranslated;\n    } else {\n      translated = [];\n    }\n\n    console.clear();\n    console.log('SearchBar addToCart', addToCart);\n\n    return (\n      <section>\n\n        <header>\n          {/* INPUT PARA PESQUISAR PRODUTOS POR NOME: */}\n          <label\n            htmlFor=\"search-input\"\n            data-testid=\"home-initial-message\"\n          >\n            Digite algum termo de pesquisa ou escolha uma categoria.\n            <input\n              type=\"text\"\n              className=\"search-input\"\n              data-testid=\"query-input\"\n              onChange={ this.handleChange }\n            />\n            <button\n              type=\"button\"\n              className=\"search-button\"\n              data-testid=\"query-button\"\n              onClick={ this.getQuery }\n            >\n              Pesquisar\n            </button>\n          </label>\n\n          {/* LINK PARA CARRINHO DE COMPRAS : */}\n          <Link\n            to={ {\n              pathname: '/shopping-cart',\n              state: {\n                product: { addToCart },\n              },\n            } }\n            className=\"link-cart\"\n            data-testid=\"shopping-cart-button\"\n          >\n            <div\n              data-testid=\"shopping-cart-size\"\n            >\n              <FaShoppingCart className=\"link-cart\" />\n              { translated.length }\n            </div>\n          </Link>\n\n        </header>\n\n        <section className=\"container\">\n\n          {/* CHAMA FUNÇÂO QUE CRIA LISTA DE CATEGORIAS DE INPUTS RADIOS : */}\n          <div className=\"categories-list\">\n            { this.listOfCategories(categories) }\n          </div>\n\n          {/* LISTA DE PRODUTOS REQUISITADOS À API POR CATEGORIA OU NOME : */}\n          <div className=\"products-list\">\n            {\n              listProducts.length > 0 ? listProducts.map((product) => (\n                <div\n                  key={ product.id }\n                  className=\"card-product\"\n                  data-testid=\"product\"\n                >\n                  <p>{ product.title }</p>\n                  <img\n                    src={ product.thumbnail }\n                    alt=\"foto\"\n                    width=\"100px\"\n                    className=\"image-search\"\n                  />\n                  <p>{ `R$ ${product.price}` }</p>\n\n                  { product.shipping.free_shipping\n                    ? <p data-testid=\"free-shipping\" className=\"shi\">°Frete Grátis </p>\n                    : null }\n\n                  {/* LINK PARA DETALHES DO PRODUTO ATUAL : */}\n                  <Link\n                    to={ {\n                      pathname: `/product-details/${product.id}`,\n                      state: {\n                        product: { product },\n                        addToCart: { addToCart },\n                        listProducts: { listProducts },\n                      },\n                    } }\n                    data-testid=\"product-detail-link\"\n                    className=\"link-details\"\n                  >\n                    Detalhes\n                  </Link>\n\n                  {/* BOTAO DE ADICIONAR PRODUTO ATUAL AO CARRINHO: */}\n                  <button\n                    id={ product.id }\n                    type=\"button\"\n                    data-testid=\"product-add-to-cart\"\n                    onClick={ this.handleClick }\n                    className=\"button-addCart\"\n                  >\n                    Adicionar ao Carrinho\n                  </button>\n\n                </div>\n              )) : <p>Nenhum produto foi encontrado</p>\n            }\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location } = this.props;\n    const { state } = location;\n    const { listProducts } = state.listProducts;\n    const { product } = state.product;\n    const { addToCart } = state.addToCart;\n    const storaRating = localStorage.getItem(`${product.id}`);\n    const translatedRating = JSON.parse(storaRating);\n\n    this.state = {\n      addToCart: [...addToCart],\n      listProducts,\n      rating: translatedRating,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRating = this.handleRating.bind(this);\n  }\n\n  handleClick(event) {\n    const { addToCart: stateAddToCart, listProducts } = this.state;\n    const productId = event.target.id;\n    const filterProduct = listProducts.filter((result) => result.id === productId);\n    const [objectProduct] = filterProduct; // sem filtro: [...addToCart, objectProduct]\n\n    const sumAll = [...stateAddToCart, objectProduct];\n    const jsonAddToCart = JSON.stringify(sumAll);\n    localStorage.removeItem('cart');\n    localStorage.setItem('cart', jsonAddToCart);\n    const cart = localStorage.getItem('cart');\n    const cartTranslated = JSON.parse(cart);\n\n    this.setState({\n      addToCart: cartTranslated, // para ter filtro aqui newArray\n    });\n  }\n\n  handleRating(event) {\n    const { location } = this.props;\n    const { state } = location;\n    const { product } = state.product;\n    localStorage.removeItem(`${product.id}`);\n    const rating = JSON.stringify(event.target.value);\n    localStorage.setItem(`${product.id}`, rating);\n    // Esse setState é usado para forçar a página a atualizar.\n    this.setState({\n      rating: event.target.value,\n    });\n  }\n\n  render() {\n    const { location } = this.props;\n    const { state } = location;\n    const { product } = state.product;\n    const { addToCart, rating } = this.state;\n    // const getRating = localStorage.getItem(`${product.id}`);\n    // const getRatingTranslated = JSON.parse(getRating);\n\n    console.clear();\n    console.log(addToCart);\n    console.log(`Storage do ${product.id}`, localStorage[`${product.id}`]);\n    console.log('Storage:', localStorage);\n\n    return (\n      <div data-testid=\"product-detail-name\">\n\n        <header>\n          <Link to=\"/\" className=\"link-voltar\"> Voltar </Link>\n\n          <Link\n            to={ {\n              pathname: '/shopping-cart',\n              state: {\n                product: { addToCart },\n              },\n            } }\n            className=\"link-cart\"\n            data-testid=\"shopping-cart-button\"\n          >\n            <div\n              data-testid=\"shopping-cart-size\"\n            >\n              <FaShoppingCart className=\"link-cart\" />\n              { addToCart.length }\n            </div>\n          </Link>\n        </header>\n\n        <div className=\"card-product-detail\">\n          <p>{ product.title }</p>\n          <img\n            className=\"image-details\"\n            src={ product.thumbnail }\n            alt=\"foto\"\n            width=\"160px\"\n          />\n          <p>{ `R$ ${product.price}` }</p>\n\n          { product.shipping.free_shipping\n            ? <p data-testid=\"free-shipping\">°Frete Grátis</p> : null }\n\n          <button\n            id={ product.id }\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ this.handleClick }\n            className=\"button-addCart\"\n          >\n            Adicionar ao Carrinho\n          </button>\n\n          <label htmlFor=\"textarea\" className=\"text-area-coment\">\n            Escreva algum comentário :\n            <textarea\n              name=\"textarea\"\n              id=\"textarea\"\n              data-testid=\"product-detail-evaluation\"\n              cols=\"30\"\n              rows=\"10\"\n              value={ rating }\n              onChange={ this.handleRating }\n            />\n          </label>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\n// Podia ser assim\n// ProductDetails.propTypes = {\n//   location: PropTypes.shape({\n//     state: PropTypes.shape({\n//       product: PropTypes.shape({\n//         product: PropTypes.shape({\n//           title: PropTypes.string,\n//           thumbnail: PropTypes.string,\n//           price: PropTypes.number,\n//         }),\n//       }),\n//     }),\n//   }).isRequired,\n// };\n\n// Mas assim é melhor!\nProductDetails.propTypes = {\n  location: PropTypes.objectOf(\n    PropTypes.string,\n    PropTypes.bool,\n    PropTypes.number,\n  ).isRequired,\n};\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass CheckoutForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sumPrices = this.sumPrices.bind(this);\n  }\n\n  sumPrices(addToCart) {\n    return addToCart.reduce((result, product) => {\n      const sum = result + product.price;\n      return sum;\n    }, 0);\n  }\n\n  render() {\n    const { location } = this.props;\n    const { state } = location;\n    const { products } = state;\n    const { products2 } = state;\n    const { noRepetElementsAddToCart } = products;\n    const { addToCart } = products2;\n\n    console.clear();\n    console.log('Checkout addToCart', addToCart);\n\n    return (\n      <div>\n\n        <header>\n          <Link to=\"/\" className=\"link-voltar\">Voltar</Link>\n        </header>\n\n        <div>\n          <h3>Revise seus Produtos:</h3>\n          {\n            noRepetElementsAddToCart.map((product) => (\n              <div key={ product.id } className=\"card-product-cart\">\n                <img src={ product.thumbnail } alt=\"foto\" width=\"70px\" />\n                <p>{product.title}</p>\n                <p>{ `R$ ${product.price}` }</p>\n              </div>\n            ))\n          }\n        </div>\n\n        <p className=\"total-price\">\n          {\n            `R$ ${this.sumPrices(addToCart).toFixed(2)}`\n          }\n        </p>\n\n        <h3>Informações do Comprador:</h3>\n\n        <form id=\"form-info\">\n          <label htmlFor=\"checkout-fullname\" className=\"labels-checkout\">\n            Nome completo\n            <input type=\"text\" data-testid=\"checkout-fullname\" />\n          </label>\n\n          <label htmlFor=\"checkout-email\" className=\"labels-checkout\">\n            Email\n            <input type=\"email\" data-testid=\"checkout-email\" />\n          </label>\n\n          <label htmlFor=\"checkout-cpf\" className=\"labels-checkout\">\n            CPF\n            <input type=\"text\" data-testid=\"checkout-cpf\" />\n          </label>\n\n          <label htmlFor=\"checkout-phone\" className=\"labels-checkout\">\n            Telefone\n            <input type=\"text\" data-testid=\"checkout-phone\" />\n          </label>\n\n          <label htmlFor=\"checkout-cep\" className=\"labels-checkout\">\n            CEP\n            <input type=\"text\" data-testid=\"checkout-cep\" />\n          </label>\n\n          <label htmlFor=\"checkout-address\" className=\"labels-checkout\">\n            Endereço\n            <input type=\"text\" data-testid=\"checkout-address\" />\n          </label>\n\n          <div>\n            <button type=\"submit\" className=\"button-buy\">Finalizar</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nCheckoutForm.propTypes = {\n  location: PropTypes.objectOf(\n    PropTypes.string,\n    PropTypes.bool,\n    PropTypes.number,\n  ).isRequired,\n};\n\nexport default CheckoutForm;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport ShoppingCart from './components/ShoppingCart';\nimport SearchBar from './components/SearchBar';\n// import ShoppingCartIcon from './components/ShoppingCartIcon';\nimport ProductDetails from './components/ProductDetails';\nimport CheckoutForm from './components/CheckoutForm';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" basename={ process.env.PUBLIC_URL }>\n\n        <Switch>\n          <Route exact path=\"/\" component={ SearchBar } />\n          <Route path=\"/shopping-cart\" component={ ShoppingCart } />\n          <Route\n            path=\"/product-details/:id\"\n            component={ ProductDetails }\n          />\n          <Route path=\"/checkout\" component={ CheckoutForm } />\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}